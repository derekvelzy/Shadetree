{"ast":null,"code":"import _regeneratorRuntime from \"/Users/derekvelzy/sta/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/derekvelzy/sta/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/derekvelzy/sta/components/context/context.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { createContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nexport var Context = /*#__PURE__*/createContext(null);\nexport var ConfigProvider = function ConfigProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  // ALL STATE GOES HERE\n  var _useState = useState([]),\n      topUsers = _useState[0],\n      setTopUsers = _useState[1];\n\n  var _useState2 = useState([]),\n      services = _useState2[0],\n      setServices = _useState2[1];\n\n  useEffect(function () {\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n\n    function _getData() {\n      _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // get Data from the server\n                axios.get('http://localhost:3000/api/topUsers').then(function (results) {\n                  var users = results.data.topUsers;\n                  var narrow = [];\n                  var user;\n                  var n = 0;\n\n                  for (var i = 0; i < users.length; i++) {\n                    if (user !== users[i].user_id) {\n                      narrow.push({\n                        user_id: users[i].user_id,\n                        first: users[i].first,\n                        last: users[i].last,\n                        username: users[i].username,\n                        mech: users[i].mech,\n                        location: users[i].location,\n                        photo: users[i].photo,\n                        rating: users[i].rating,\n                        service: [users[i].service],\n                        photo_url: [users[i].photo_url]\n                      });\n                      n += 1;\n                      user = users[i].user_id;\n                    } else {\n                      narrow[n - 1].service.push(users[i].service);\n                      narrow[n - 1].photo_url.push(users[i].photo_url);\n                    }\n                  }\n\n                  setTopUsers(narrow);\n                  setServices(results.data.services);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getData.apply(this, arguments);\n    }\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      topUsers: topUsers,\n      setTopUsers: setTopUsers,\n      services: services,\n      setServices: setServices\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ConfigProvider, \"hUkoeHdSVe1LSkocujRKAkGFj6M=\");\n\n_c = ConfigProvider;\nConfigProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigProvider\");","map":{"version":3,"sources":["/Users/derekvelzy/sta/components/context/context.tsx"],"names":["React","createContext","useState","useEffect","PropTypes","axios","Context","ConfigProvider","children","topUsers","setTopUsers","services","setServices","getData","get","then","results","users","data","narrow","user","n","i","length","user_id","push","first","last","username","mech","location","photo","rating","service","photo_url","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Top, Service } from '../../database/model/model';\n\nexport interface TopTotal {\n  user_id: Number;\n  username: String;\n  first: String;\n  last: String;\n  photo: String;\n  mech: Boolean;\n  rating: String;\n  location: String;\n  service: String[];\n  photo_url: String[];\n}\n\ninterface AppContextInterface {\n  topUsers: TopTotal[],\n  setTopUsers: (arg: TopTotal[]) => void,\n  services: Service[],\n  setServices: (arg: Service[]) => void;\n}\n\nexport const Context = createContext<AppContextInterface | null>(null);\n\ntype Props = {\n  children: React.ReactNode\n}\n\nexport const ConfigProvider: React.FC = ({ children }: Props) => {\n  // ALL STATE GOES HERE\n  const [topUsers, setTopUsers] = useState<TopTotal[]>([]);\n  const [services, setServices] = useState<Service[]>([]);\n\n  useEffect(() => {\n    async function getData() {\n      // get Data from the server\n      axios.get('http://localhost:3000/api/topUsers')\n        .then((results) => {\n          const users: Top[] = results.data.topUsers;\n          let narrow: TopTotal[] = [];\n          let user;\n          let n = 0;\n          for (let i = 0; i < users.length; i++) {\n            if (user !== users[i].user_id) {\n              narrow.push({\n                user_id: users[i].user_id,\n                first: users[i].first,\n                last: users[i].last,\n                username: users[i].username,\n                mech: users[i].mech,\n                location: users[i].location,\n                photo: users[i].photo,\n                rating: users[i].rating,\n                service: [users[i].service],\n                photo_url: [users[i].photo_url]\n              })\n              n += 1;\n              user = users[i].user_id;\n            } else {\n              narrow[n - 1].service.push(users[i].service);\n              narrow[n - 1].photo_url.push(users[i].photo_url);\n            }\n          }\n          setTopUsers(narrow);\n          setServices(results.data.services);\n        })\n    }\n    getData();\n  }, []);\n\n  return (\n    <Context.Provider\n      value={{\n        topUsers,\n        setTopUsers,\n        services,\n        setServices\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\nConfigProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};"]},"metadata":{},"sourceType":"module"}
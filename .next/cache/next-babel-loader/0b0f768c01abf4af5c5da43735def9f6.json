{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/derekvelzy/shadetree/components/context/context.tsx\";\nimport * as React from 'react';\nimport { createContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nexport const Context = /*#__PURE__*/createContext(null);\nexport const ConfigProvider = ({\n  children\n}) => {\n  // ALL STATE GOES HERE\n  const {\n    0: topUsers,\n    1: setTopUsers\n  } = useState([]);\n  const {\n    0: services,\n    1: setServices\n  } = useState([]);\n  useEffect(() => {\n    async function getData() {\n      // get Data from the server\n      axios.get('http://localhost:3000/api/topUsers').then(results => {\n        const users = results.data.topUsers;\n        let narrow = [];\n        let user;\n        let n = 0;\n\n        for (let i = 0; i < users.length; i++) {\n          if (user !== users[i].user_id) {\n            narrow.push({\n              user_id: users[i].user_id,\n              first: users[i].first,\n              last: users[i].last,\n              username: users[i].username,\n              mech: users[i].mech,\n              location: users[i].location,\n              photo: users[i].photo,\n              rating: users[i].rating,\n              service: [users[i].service],\n              photo_url: [users[i].photo_url]\n            });\n            n += 1;\n            user = users[i].user_id;\n          } else {\n            narrow[n - 1].service.push(users[i].service);\n            narrow[n - 1].photo_url.push(users[i].photo_url);\n          }\n        }\n\n        setTopUsers(narrow);\n        setServices(results.data.services);\n      });\n    }\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      topUsers,\n      setTopUsers,\n      services,\n      setServices\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\nConfigProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};","map":{"version":3,"sources":["/Users/derekvelzy/shadetree/components/context/context.tsx"],"names":["React","createContext","useState","useEffect","PropTypes","axios","Context","ConfigProvider","children","topUsers","setTopUsers","services","setServices","getData","get","then","results","users","data","narrow","user","n","i","length","user_id","push","first","last","username","mech","location","photo","rating","service","photo_url","propTypes","node","isRequired"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAuBA,OAAO,MAAMC,OAAO,gBAAGL,aAAa,CAA6B,IAA7B,CAA7B;AAMP,OAAO,MAAMM,cAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAC/D;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAa,EAAb,CAAxC;AACA,QAAM;AAAA,OAACS,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAY,EAAZ,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,OAAf,GAAyB;AACvB;AACAR,MAAAA,KAAK,CAACS,GAAN,CAAU,oCAAV,EACGC,IADH,CACSC,OAAD,IAAa;AACjB,cAAMC,KAAY,GAAGD,OAAO,CAACE,IAAR,CAAaT,QAAlC;AACA,YAAIU,MAAkB,GAAG,EAAzB;AACA,YAAIC,IAAJ;AACA,YAAIC,CAAC,GAAG,CAAR;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,cAAIF,IAAI,KAAKH,KAAK,CAACK,CAAD,CAAL,CAASE,OAAtB,EAA+B;AAC7BL,YAAAA,MAAM,CAACM,IAAP,CAAY;AACVD,cAAAA,OAAO,EAAEP,KAAK,CAACK,CAAD,CAAL,CAASE,OADR;AAEVE,cAAAA,KAAK,EAAET,KAAK,CAACK,CAAD,CAAL,CAASI,KAFN;AAGVC,cAAAA,IAAI,EAAEV,KAAK,CAACK,CAAD,CAAL,CAASK,IAHL;AAIVC,cAAAA,QAAQ,EAAEX,KAAK,CAACK,CAAD,CAAL,CAASM,QAJT;AAKVC,cAAAA,IAAI,EAAEZ,KAAK,CAACK,CAAD,CAAL,CAASO,IALL;AAMVC,cAAAA,QAAQ,EAAEb,KAAK,CAACK,CAAD,CAAL,CAASQ,QANT;AAOVC,cAAAA,KAAK,EAAEd,KAAK,CAACK,CAAD,CAAL,CAASS,KAPN;AAQVC,cAAAA,MAAM,EAAEf,KAAK,CAACK,CAAD,CAAL,CAASU,MARP;AASVC,cAAAA,OAAO,EAAE,CAAChB,KAAK,CAACK,CAAD,CAAL,CAASW,OAAV,CATC;AAUVC,cAAAA,SAAS,EAAE,CAACjB,KAAK,CAACK,CAAD,CAAL,CAASY,SAAV;AAVD,aAAZ;AAYAb,YAAAA,CAAC,IAAI,CAAL;AACAD,YAAAA,IAAI,GAAGH,KAAK,CAACK,CAAD,CAAL,CAASE,OAAhB;AACD,WAfD,MAeO;AACLL,YAAAA,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,CAAcY,OAAd,CAAsBR,IAAtB,CAA2BR,KAAK,CAACK,CAAD,CAAL,CAASW,OAApC;AACAd,YAAAA,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,CAAca,SAAd,CAAwBT,IAAxB,CAA6BR,KAAK,CAACK,CAAD,CAAL,CAASY,SAAtC;AACD;AACF;;AACDxB,QAAAA,WAAW,CAACS,MAAD,CAAX;AACAP,QAAAA,WAAW,CAACI,OAAO,CAACE,IAAR,CAAaP,QAAd,CAAX;AACD,OA7BH;AA8BD;;AACDE,IAAAA,OAAO;AACR,GAnCQ,EAmCN,EAnCM,CAAT;AAqCA,sBACE,QAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,QADK;AAELC,MAAAA,WAFK;AAGLC,MAAAA,QAHK;AAILC,MAAAA;AAJK,KADT;AAAA,cAQGJ;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtDM;AAwDPD,cAAc,CAAC4B,SAAf,GAA2B;AACzB3B,EAAAA,QAAQ,EAAEJ,SAAS,CAACgC,IAAV,CAAeC;AADA,CAA3B","sourcesContent":["import * as React from 'react';\nimport { createContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Top, Service } from '../../database/model/model';\n\nexport interface TopTotal {\n  user_id: Number;\n  username: String;\n  first: String;\n  last: String;\n  photo: String;\n  mech: Boolean;\n  rating: String;\n  location: String;\n  service: String[];\n  photo_url: String[];\n}\n\ninterface AppContextInterface {\n  topUsers: TopTotal[],\n  setTopUsers: (arg: TopTotal[]) => void,\n  services: Service[],\n  setServices: (arg: Service[]) => void;\n}\n\nexport const Context = createContext<AppContextInterface | null>(null);\n\ntype Props = {\n  children: React.ReactNode\n}\n\nexport const ConfigProvider: React.FC = ({ children }: Props) => {\n  // ALL STATE GOES HERE\n  const [topUsers, setTopUsers] = useState<TopTotal[]>([]);\n  const [services, setServices] = useState<Service[]>([]);\n\n  useEffect(() => {\n    async function getData() {\n      // get Data from the server\n      axios.get('http://localhost:3000/api/topUsers')\n        .then((results) => {\n          const users: Top[] = results.data.topUsers;\n          let narrow: TopTotal[] = [];\n          let user;\n          let n = 0;\n          for (let i = 0; i < users.length; i++) {\n            if (user !== users[i].user_id) {\n              narrow.push({\n                user_id: users[i].user_id,\n                first: users[i].first,\n                last: users[i].last,\n                username: users[i].username,\n                mech: users[i].mech,\n                location: users[i].location,\n                photo: users[i].photo,\n                rating: users[i].rating,\n                service: [users[i].service],\n                photo_url: [users[i].photo_url]\n              })\n              n += 1;\n              user = users[i].user_id;\n            } else {\n              narrow[n - 1].service.push(users[i].service);\n              narrow[n - 1].photo_url.push(users[i].photo_url);\n            }\n          }\n          setTopUsers(narrow);\n          setServices(results.data.services);\n        })\n    }\n    getData();\n  }, []);\n\n  return (\n    <Context.Provider\n      value={{\n        topUsers,\n        setTopUsers,\n        services,\n        setServices\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\nConfigProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};"]},"metadata":{},"sourceType":"module"}